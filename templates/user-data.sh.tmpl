readonly CONFIG_DIR=/opt/snowplow/config

sudo mkdir -p $${CONFIG_DIR}
sudo cat << EOF > $${CONFIG_DIR}/postgres_loader.json
${config}
EOF

sudo cat << EOF > $${CONFIG_DIR}/iglu_resolver.json
${iglu_resolver}
EOF

# Create the schema to load data into
sudo cat << EOF > $${CONFIG_DIR}/create-schema.sql
CREATE SCHEMA IF NOT EXISTS ${schema_name};
EOF

sudo docker run \
  --name create_schema \
  --network host \
%{ if cloudwatch_logs_enabled ~}
  --log-driver awslogs \
  --log-opt awslogs-group=${cloudwatch_log_group_name} \
  --log-opt awslogs-stream=$(get_instance_id) \
%{ endif ~}
  -v $${CONFIG_DIR}:/snowplow/config \
  -e 'PGUSER=${db_username}' \
  -e 'PGPASSWORD=${db_password}' \
  postgres:13 \
  psql -h ${db_host} -d ${db_name} -p ${db_port} -f /snowplow/config/create-schema.sql

# Launch the loader
sudo docker run \
  -d \
  --name postgres_loader \
  --restart always \
  --network host \
  --memory=${container_memory} \
%{ if cloudwatch_logs_enabled ~}
  --log-driver awslogs \
  --log-opt awslogs-group=${cloudwatch_log_group_name} \
  --log-opt awslogs-stream=$(get_instance_id) \
%{ else ~}
  --log-opt max-size=10m \
  --log-opt max-file=5 \
%{ endif ~}
  -v $${CONFIG_DIR}:/snowplow/config \
  -e 'JAVA_OPTS=${java_opts}' \
  snowplow/snowplow-postgres-loader:${version} \
  --config /snowplow/config/postgres_loader.json \
  --resolver /snowplow/config/iglu_resolver.json

${telemetry_script}
